; //////////////////////////////////////////
; ///                                    ///
; ///  >>> STARS MOVING SHELL V1.00 <<<  ///
; ///                 BY                 ///
; ///    KOCHISE OF STALLION SOFTWARE    ///
; ///                                    ///
; //////////////////////////////////////////
;

; /// INITIALISATION DE LA MEMOIRE ///

INIT_PRG_MEM	movea.l	4(SP),A6		; Adresse de la BASEPAGE
	move.l	$C(A6),D0		; Taille du programme
	add.l	$14(A6),D0		; Additionne la taille du SEGMENT DATA … D0
	add.l	$1C(A6),D0		; Additionne la taille du SEGMENT BSS … D0
	addi.l	#$100,D0		; Additionne la taille de la BASEPAGE … D0
	addi.l	#$400,D0		; Additionne la taille de la future PILE (Ici, 256 positions longues (1024 OCTETS))
	move.l	D0,D1		; Copie D0 dans D1 (Taille … r‚server)
	add.l	A6,D1		; Additionne l'adresse du d‚but du programme avec D1 (La taille … r‚server)
	andi.l	#-2,D1		; Rend D1 pair (Au cas o— il ne l'‚tait pas)
	move.l	SP,OLD_STACK
	movea.l	D1,SP		; Installe l'adresse de fin du programme+place nouvelle PILE dans la PILE
	move.l	D0,-(SP)		; EmPILE la taille … reserver	\
	move.l	A6,-(SP)		; EmPILE l'adresse du programme |-> Rend le reste de la m‚moire au systŠme
	clr.w	-(SP)		; R‚serv‚                       |
	move.w	#$4A,-(SP)		; - M_SHRINK -                  |
	trap	#1		; *** GEMDOS ***                /
	lea	12(SP),SP
	tst	D0		; Si D0<>0, problŠme grave
	bne	SYS_ERROR

; /// GESTION DU PROGRAMME ///

MAIN_CONTROL	bsr	STOP_MOUSE
	bsr	SAVE_VIDEO
	move.b	#1,FROM_PROGS
	bsr	INSTALL_VIDEO
	bsr	FIELD_LOAD
	move.b	#1,ACTUAL_FIELD
	move.b	#1,CHANGE_ASKED
MAIN_LOOP	bsr	STAR_MORPH
	bsr	KEYB_WAIT
	move.b	ESC_ASKED,D2
	tst.b	D2
	bne	ESCAPING
	move.b	RUN_ASKED,D2
	tst.b	D2
	bne	RUNNING

	bra	MAIN_LOOP

ESCAPING	move.b	#0,ESC_ASKED
	bsr	FREE_MOUSE
	bsr	MEM_FREE
	bsr	RESTORE_VIDEO
	bra	SYS_ERROR

RUNNING	move.b	#0,RUN_ASKED
	bsr	FREE_MOUSE
	bsr	RUN_PROGS
	
	bsr	STOP_MOUSE
	move.b	#1,FROM_PROGS
	bsr	INSTALL_VIDEO
	bsr	FIELD_LOAD
	move.b	#1,CHANGE_ASKED
		
	bra	MAIN_LOOP

; /// ALLOCATION MEMOIRE ///

MEM_ALLOC	clr.w	-(SP)		; System RAM only
	move.l	#339878,-(SP)		; Les deux ecrans plus les FIELDs
	move.w	#$44,-(SP)		; - M_XALLOC -
	trap	#1		; *** GEMDOS ***
	addq.l	#8,SP
	tst.l	D0
	beq	SYS_ERROR
	lea	BOTH_SCREEN,A0
	move.l	D0,(A0)+		; Premier ‚cran
	add.l	#153600,D0
	move.l	D0,(A0)+		; Deuxieme ‚cran
	add.l	#153600,D0
	move.l	D0,(A0)+		; D‚but des FIELDs

	rts
	
; /// CHARGEMENT DES FIELDS ///

FIELD_LOAD	lea	FIELD_NAME,A6
	lea	FIELD_BNK,A5
	clr.b	D4
LOOK_FOR	move.b	(A6)+,D0
	tst.b	D0
	beq	END_OF		; Si trouve 0 ...
	bra	LOOK_FOR
END_OF	move.b	(A6),D0
	tst.b	D0		; Deuxieme 0 ...
	beq	END_LOAD		; ... fin de chargement
FILE_LOAD	clr.w	-(SP)
	move.l	A6,-(SP)
	move.w	#$3D,-(SP)		; - F_OPEN -
	trap	#1		; *** GEMDOS ***
	addq.l	#8,SP
	move.w	D0,D7
	
	move.w	#2,-(SP)		; Fin
	move.w	D0,-(SP)
	clr.l	-(SP)		; Fin du fichier
	move.w	#$42,-(SP)		; - F_SEEK -
	trap	#1		; *** GEMDOS ***
	lea	10(SP),SP
	move.l	D0,D6

	clr.w	-(SP)		; D‚but
	move.w	D7,-(SP)
	clr.l	-(SP)		; D‚but du fichier
	move.w	#$42,-(SP)		; - F_SEEK -
	trap	#1		; *** GEMDOS ***
	lea	10(SP),SP

	move.l	(A5)+,D5
	move.l	D5,-(SP)		; Adresse du FIELD
	move.l	D6,-(SP)		; Taille du fichier
	move.w	D7,-(SP)		; Handle
	move.w	#$3F,-(SP)		; - F_READ -
	trap	#1		; *** GEMDOS ***
	lea	12(SP),SP

	cmp.l	D0,D6
	bne	SYS_ERROR
	add.l	D6,D5		; Adresse du prochain FIELD
	move.l	D5,(A5)
	
	move.w	D7,-(SP)
	move.w	#$3E,-(SP)		; - F_CLOSE -
	trap	#1		; *** GEMDOS ***
	addq.l	#4,SP
	
	addq.b	#1,D4
	bra	LOOK_FOR
END_LOAD	move.b	D4,NB_FIELD
	adda.l	#4,A5
	clr.l	(A5)		; Fin des FIELDs

	rts
			
; /// ATTENTE DU CLAVIER ///

KEYB_WAIT	move.w	#2,-(SP)		; Console
	move.w	#2,-(SP)		; - BCONIN -
	trap	#13		; *** BIOS ***
	addq.l	#4,SP
	
	move.l	D0,D1
	swap	D1

	cmpi.b	#$48,D1		; Fleche HAUT
	beq	F_HAUT
	cmpi.b	#$50,D1		; Fleche BAS
	beq	F_BAS
	cmpi.b	#$39,D1		; Barre d'ESPACE
	beq	SPACE
	cmpi.b	#1,D1		; ESC
	beq	ESCAPE
	bra	OUT_KEYB
F_HAUT	move.b	ACTUAL_FIELD,D0
	cmpi.b	#1,D0		; Si FIELD 1 ...
	beq	OUT_KEYB		; ... FIELD 0 impossible
	subq.b	#1,D0
	move.b	D0,ACTUAL_FIELD
	move.b	#1,CHANGE_ASKED		; Demande d'actualiser l'‚cran
	bra	OUT_KEYB
F_BAS	move.b	ACTUAL_FIELD,D0
	move.b	NB_FIELD,D1
	cmp.b	D0,D1		; Si FIELD MAX ...
	beq	OUT_KEYB		; ... FIELD MAX+1 impossible
	addq.b	#1,D0
	move.b	D0,ACTUAL_FIELD
	move.b	#1,CHANGE_ASKED		; Demande d'actualiser l'‚cran
	bra	OUT_KEYB
ESCAPE	move.b	#1,ESC_ASKED		; Demande de sortie
	bra	OUT_KEYB
SPACE	move.b	#1,RUN_ASKED		; Demande de lancement

OUT_KEYB	rts

; /// MORPHING LINEAIRE DES ETOILES ///

STAR_MORPH	move.b	CHANGE_ASKED,D1
	tst.b	D1
	beq	END_GRAPH
	move.b	#0,CHANGE_ASKED
	
	pea	CLS
	move.w	#9,-(SP)		; - C_CONWS -
	trap	#1		; *** GEMDOS ***
	addq.l	#6,SP
	
	move.b	ACTUAL_FIELD,D1
	cmpi.b	#1,D1
	beq	COPER
	cmpi.b	#2,D1
	beq	STARG
	bra	SYS_ERROR
COPER	pea	COPER_TXT
	bra	GRAPH
STARG	pea	STARG_TXT
GRAPH	move.w	#9,-(SP)		; - C_CONWS -
	trap	#1		; *** GEMDOS ***
	addq.l	#6,SP
	
END_GRAPH	rts

; /// LANCEMENT DES PROGRAMMES ///

RUN_PROGS	lea	FIELD_BNK,A6
	clr.l	D5
	move.b	ACTUAL_FIELD,D5
	subq.b	#1,D5
	mulu.l	#4,D5
	adda.l	D5,A6
	move.l	(A6),A6
	move.w	(A6)+,D0
	cmpi.w	#1,D0
	bne	SYS_ERROR
	clr.l	D0
	move.w	(A6)+,D0
	mulu.l	#4,D0
	adda.l	D0,A6
	move.b	#0,FROM_PROGS		; Video dans le mode du programme
	
	bsr	INSTALL_VIDEO
	
	pea	ENVIRONMENT
	pea	COMMAND_LINE
	move.l	PROG_LOCAT,-(SP)
	clr.w	-(SP)		; Charge et execute
	move.w	#$4B,-(SP)		; - P_EXEC -
	trap	#1		; *** GEMDOS ***
	lea	16(SP),SP
	tst.w	D0
	bne	SYS_ERROR
	
	rts
	
ENVIRONMENT	dc.b	0
COMMAND_LINE	dc.b	0	
	
; /// ARRETE LA SOURIS ///

STOP_MOUSE	move.w	#18,-(SP)
	move.w	#4,-(SP)
	move.w	#3,-(SP)		; - BCONOUT -
	trap	#13		; *** BIOS ***
	addq.l	#6,SP
	
	rts

; /// LIBERE LA SOURIS ///

FREE_MOUSE	move.w	#8,-(SP)
	move.w	#4,-(SP)
	move.w	#3,-(SP)		; - BCONOUT -
	trap	#13		; *** BIOS ***
	addq.l	#6,SP
	
	rts

; /// LIBERATION DE LA MEMOIRE ///

MEM_FREE	lea	BOTH_SCREEN,A6
	move.l	(A6)+,D0
	move.l	(A6),D1
	cmp.l	D0,D1
	bgt	SECOND_START
	move.l	D1,-(SP)
	bra	FREE
SECOND_START	move.l	D0,-(SP)
FREE	move.w	#$49,-(SP)		; - M_FREE -
	trap	#1		; *** GEMDOS ***
	addq.l	#6,SP
	tst.w	D0
	bne	SYS_ERROR
	
	rts

; /// INSTALLE LE NOUVEAU MODE VIDEO ///

INSTALL_VIDEO	move.b	FROM_PROGS,D0
	tst.b	D0
	bne	SMS_MODE
	clr.l	D0
	move.w	(A6)+,D0		; Le mode du programme
	cmpi.w	#3,D0
	bne	CHANGE_ST
	swap	D0
	move.w	(A6)+,D0
	move.l	D0,PROG_MODE
	move.l	A6,PROG_LOCAT
		
	bsr	MEM_FREE
	
	move.l	PROG_MODE,D0
	move.w	D0,-(SP)
	move.w	#$5B,-(SP)		; - VGETSIZE -
	trap	#14		; *** XBIOS ***
	addq.l	#4,SP
	
	move.l	D0,D5
	
	bsr	RESERVE_SCREEN
	
	move.l	PROG_MODE,D0
	move.l	D0,-(SP)
	move.b	#1,D6
	bra	NEW_MODE
CHANGE_ST	move.l	D0,PROG_MODE
	move.l	A6,PROG_LOCAT
	
	bsr	MEM_FREE

	move.l	#32000,D5
	
	bsr	RESERVE_SCREEN
	
	move.l	PROG_MODE,D0
	move.w	D0,-(SP)
	clr.b	D6
	bra	NEW_MODE
SMS_MODE	bsr	MEM_ALLOC
	move.w	#3,D0
	swap	D0
	move.w	#%100010100,D0
	move.l	D0,-(SP)
	move.b	#1,D6
NEW_MODE	lea	BOTH_SCREEN,A6
	move.l	(A6),-(SP)
	move.l	(SP),-(SP)
	move.w	#5,-(SP)		; - SETSCREEN -
	trap	#14		; *** XBIOS ***
	tst.b	D6
	bne	RESTORE_FALCON
	lea	12(SP),SP
	bra	END_CHANGE_MODE
RESTORE_FALCON	lea	14(SP),SP

END_CHANGE_MODE	rts

RESERVE_SCREEN	clr.w	-(SP)		; System RAM only
	move.l	D5,-(SP)
	move.w	#$44,-(SP)		; - M_XALLOC -
	trap	#1		; *** GEMDOS ***
	addq.l	#8,SP
	tst.l	D0
	beq	SYS_ERROR
	lea	BOTH_SCREEN,A6
	move.l	D0,(A6)+
	move.l	D0,(A6)+
	
	rts

; /// SAUVE L'ANCIEN MODE VIDEO ///

SAVE_VIDEO	move.w	#-1,-(SP)		; Mode actuel
	move.w	#$58,-(SP)		; - VSETMODE -
	trap	#14		; *** XBIOS ***
	addq.l	#4,SP
	
	move.w	D0,OLD_MODE
	
	rts

; /// RESTAURE LE MODE VIDEO ///

RESTORE_VIDEO	move.w	OLD_MODE,-(SP)
	move.w	#$5B,-(SP)		; - VGETSIZE -
	trap	#14		; *** XBIOS ***
	addq.l	#4,SP
	
	clr.w	-(SP)		; System RAM only
	move.l	D0,-(SP)
	move.w	#$44,-(SP)		; - M_XALLOC -
	trap	#1		; *** GEMDOS ***
	addq.l	#8,SP
	tst.l	D0
	beq	SYS_ERROR
	move.l	D0,D7
	
	move.w	OLD_MODE,-(SP)		; Ancien mode
	move.w	#3,-(SP)
	move.l	D7,-(SP)
	move.l	D7,-(SP)
	move.w	#5,-(SP)		; - SETSCREEN -
	trap	#14		; *** XBIOS ***
	lea	14(SP),SP
	
	rts

; /// SORTIE DU SHELL ///

SYS_ERROR	move.l	OLD_STACK,SP		; Restaure l'ancienne PILE
EXIT_PROG	move.w	D0,-(SP)		; EmPILE le code de l'erreur \
	move.w	#$4C,-(SP)		; - P_TERM -                 |-> Quitte proprement
	trap	#1		; *** GEMDOS ***             /

; /// VARIABLES ///

OLD_STACK	ds.l	1		; Ancienne PILE
OLD_MODE	ds.w	1		; Ancien mode
FROM_PROGS	ds.b	1		; Changement occasionel
BOTH_SCREEN	ds.l	2		; L'adresse des deux ‚crans
FIELD_BNK	ds.l	16		; Pointeurs des FIELDs
NB_FIELD	ds.b	1		; Nombre de ...
ACTUAL_FIELD	ds.b	1		; FIELD en utilisation
NB_POINTS	ds.b	1		; Nombre de points par FIELD
CHANGE_ASKED	ds.b	1		; Demande d'actualisation
ESC_ASKED	ds.b	1		; Demande de sortie
RUN_ASKED	ds.b	1		; Demande de lancement
PROG_MODE	ds.l	1		; Mode du programme
PROG_LOCAT	ds.l	1		; Adresse du programme

FIELD_NAME	dc.b	0,"I:\M-SHELL\COPERNIC.SMS",0	; Le FIELD de COPERNIC
	dc.b	"I:\M-SHELL\STARGIDE.SMS",0,0	; Le FIELD de STARGUIDE
NB_PICTURES	dc.b	60
COPER_TXT	dc.b	"COPERNIC",0
STARG_TXT	dc.b	"STARGUIDE",0
CLS	dc.b	27,69,0